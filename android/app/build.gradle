def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

// task renameReleaseApkFile {
//     doLast {
//         print "Rename output apk file names...."
//         // verify that the build was generated successfully
//         ext.path = "../../build/app/outputs/apk/release" 
//         ext.apkFile = file("${ext.path}/app-release.apk")
//         if(ext.apkFile.exists()) { 
//             copy {
//                 from ext.path
//                 include apkFile.name
//                 into ext.path
                
//                 rename { "photokredy-v${flutterVersionName}-release.apk" }
//             }
//             delete ext.apkFile

//         }
//         println "Done"
//     }
// }

afterEvaluate {
    if (project.hasProperty("assembleRelease")) {
        assembleRelease.finalizedBy(renameReleaseApkFile)
     }
}

android {
    compileSdkVersion 27

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "photokredy-v${variant.versionName}-${variant.name}.apk"
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "com.hramaroson.photokredy" 
        minSdkVersion 21
        targetSdkVersion 27
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            debuggable false
            minifyEnabled true
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
